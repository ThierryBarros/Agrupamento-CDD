)
)
names(ufus)[3:4] <- c("Professor20","Professor40")
ufus = ufus[c("UORG_LOTACAO","Professor20","Professor40","idade_mediana","Outro")]
summary(ufus)
ufus %>%
select(-UORG_LOTACAO) %>%
ggpairs()
ufus %>%
ggplot(aes(x = "Professor20", y = Professor20)) +
geom_jitter(width = .01, height = 0, size = 2, alpha = .6)
ufus %>%
ggplot(aes(x = Professor20)) +
geom_histogram(bins = 15,
boundary = 0,
fill = "#95CFB7",
color = "black") +
geom_rug()
ufus.scaled = ufus %>%
mutate_each(funs(as.vector(scale(.))), 2:5)
summary(ufus.scaled)
ufus.scaled %>%
select(-UORG_LOTACAO) %>%
ggpairs()
dists = ufus.scaled %>%
as.data.frame() %>%
column_to_rownames("UORG_LOTACAO") %>%
dist(method = "euclidean")
hc = hclust(dists, method = "ward.D2")
plot(hc, cex = .6)
n_clusters = 3
rect.hclust(hc, k=n_clusters)
ufus <- ufus %>%
mutate(cluster = hc %>%
cutree(k = n_clusters) %>%
as.character())
ufus.scaled <- ufus.scaled %>%
mutate(cluster = hc %>%
cutree(k = n_clusters) %>%
as.character())
ufus.long = melt(ufus.scaled, id.vars = c("UORG_LOTACAO", "cluster"))
hc %>%
cutree(k = n_clusters) %>%
silhouette(dists) %>%
plot(col = RColorBrewer::brewer.pal(n_clusters, "Set2"))
ufus.long %>%
ggplot(aes(x = variable, y = value, group = UORG_LOTACAO, colour = cluster)) +
geom_line(alpha = 0.4) +
facet_wrap(~ cluster)
#Remove a coluna cluster
ufus.scaled = ufus.scaled %>%
select(-cluster)
# O agrupamento
km = ufus.scaled %>%
select(-UORG_LOTACAO) %>%
kmeans(centers = n_clusters, 20)
ufus.scaled.km.long = km %>%
augment(ufus.scaled) %>%
gather(key = "variável",
value = "valor",
-UORG_LOTACAO, -.cluster)
ufus.scaled.km.long %>%
ggplot(aes(x = `variável`, y = valor, group = UORG_LOTACAO, colour = .cluster)) +
#geom_point(alpha = 0.2) +
geom_line(alpha = .5) +
facet_wrap(~ .cluster)
autoplot(km, data = ufus.scaled, label = TRUE)
dists = ufus.scaled %>%
select(-UORG_LOTACAO) %>%
dist() # só para plotar silhouetas depois
plot(silhouette(km$cluster, dists), col = RColorBrewer::brewer.pal(n_clusters, "Set2"))
table(km$cluster)
#summary(ufus.scaled)
p <- km %>%
augment(ufus.scaled) %>%
plot_ly(type = 'parcoords',
line = list(color = ~.cluster,
showScale = TRUE),
dimensions = list(
list(range = c(-3, 3),
label = 'Outro/repo', values = ~Outro),
list(range =  c(-3, 3),
label = 'Professor20h', values = ~Professor20),
list(range =  c(-6, 3),
label = 'Professor40h', values = ~Professor40),
list(range =  c(-2, 3),
label = 'idade_mediana', values = ~idade_mediana)
)
)
p
plot_clusgap = function(clusgap, title="Gap Statistic calculation results"){
require("ggplot2")
gstab = data.frame(clusgap$Tab, k=1:nrow(clusgap$Tab))
p = ggplot(gstab, aes(k, gap)) + geom_line() + geom_point(size=5)
p = p + geom_errorbar(aes(ymax=gap+SE.sim, ymin=gap-SE.sim), width = .2)
p = p + ggtitle(title)
return(p)
}
gaps <- ufus.scaled %>%
select(-UORG_LOTACAO) %>%
clusGap(FUN = kmeans, nstart = 20, K.max = 15, B = 200)
plot_clusgap(gaps)
set.seed(123)
explorando_k = tibble(k = 1:12) %>%
group_by(k) %>%
do(
kmeans(select(ufus.scaled, -UORG_LOTACAO),
centers = .$k,
nstart = 20) %>% glance()
)
explorando_k %>%
ggplot(aes(x = k, y = betweenss / totss)) +
geom_line() +
geom_point()
ufus1 = read_csv("ufcg-201704-sumario-UAs-wide.csv",
col_types = cols(
UORG_LOTACAO = col_character(),
Outro = col_double(),
`Professor 20h` = col_double(),
`Professor 40h ou DE` = col_double(),
idade_25perc = col_double(),
idade_mediana = col_double(),
idade_75perc = col_double()
)
)
names(ufus1)[3:4] <- c("Professor20","Professor40")
ufus1 = ufus1[c("UORG_LOTACAO","Professor20","Professor40","idade_mediana","Outro")]
library(gtable)
library(grid)
library(ggplot2)
library(plotly)
p <- ggplot(data = ufus, aes(x = ufus$Professor20, fill = cluster)) +
geom_bar(position = "dodge")
ggplotly(p)
ufus1 = read_csv("ufcg-201704-sumario-UAs-wide.csv",
col_types = cols(
UORG_LOTACAO = col_character(),
Outro = col_double(),
`Professor 20h` = col_double(),
`Professor 40h ou DE` = col_double(),
idade_25perc = col_double(),
idade_mediana = col_double(),
idade_75perc = col_double()
)
)
names(ufus1)[3:4] <- c("Professor20","Professor40")
ufus1 = ufus1[c("UORG_LOTACAO","Professor20","Professor40","idade_mediana","Outro")]
ufus1$cluster = ufus$cluster
View(ufus1)
library(gtable)
library(grid)
library(ggplot2)
library(plotly)
p <- ggplot(data = ufus1, aes(x = ufus$Professor20, fill = cluster)) +
geom_bar(position = "dodge")
ggplotly(p)
plot_ly(ufus, x = ufus$idade_mediana, y = ufus$cluster,
mode = "markers", color = ufus$cluster)
plot_ly(ufus, x = ufus1$idade_mediana, y = ufus$cluster,
mode = "markers", color = ufus$cluster)
p <- ggplot(data = ufus1, aes(x = ufus$Professor20, fill = cluster)) +
geom_bar(position = "dodge")
ggplotly(p)
knitr::opts_chunk$set(echo = TRUE)
suppressWarnings(library(tidyverse))
library(tidyverse)
library(lubridate)
library(viridis)
require(GGally, quietly = TRUE)
require(reshape2, quietly = TRUE)
require(tidyverse, quietly = TRUE, warn.conflicts = FALSE)
library(ggfortify)
library(cluster)
library(ggdendro)
library(broom)
theme_set(theme_bw())
library(DT)
ufus = read_csv("ufcg-201704-sumario-UAs-wide.csv",
col_types = cols(
UORG_LOTACAO = col_character(),
Outro = col_double(),
`Professor 20h` = col_double(),
`Professor 40h ou DE` = col_double(),
idade_25perc = col_double(),
idade_mediana = col_double(),
idade_75perc = col_double()
)
)
names(ufus)[3:4] <- c("Professor20","Professor40")
ufus = ufus[c("UORG_LOTACAO","Professor20","Professor40","idade_mediana","Outro")]
summary(ufus)
ufus %>%
select(-UORG_LOTACAO) %>%
ggpairs()
ufus %>%
ggplot(aes(x = "Professor20", y = Professor20)) +
geom_jitter(width = .01, height = 0, size = 2, alpha = .6)
ufus %>%
ggplot(aes(x = Professor20)) +
geom_histogram(bins = 15,
boundary = 0,
fill = "#95CFB7",
color = "black") +
geom_rug()
ufus.scaled = ufus %>%
mutate_each(funs(as.vector(scale(.))), 2:5)
summary(ufus.scaled)
ufus.scaled %>%
select(-UORG_LOTACAO) %>%
ggpairs()
dists = ufus.scaled %>%
as.data.frame() %>%
column_to_rownames("UORG_LOTACAO") %>%
dist(method = "euclidean")
hc = hclust(dists, method = "ward.D2")
plot(hc, cex = .6)
n_clusters = 3
rect.hclust(hc, k=n_clusters)
ufus <- ufus %>%
mutate(cluster = hc %>%
cutree(k = n_clusters) %>%
as.character())
ufus.scaled <- ufus.scaled %>%
mutate(cluster = hc %>%
cutree(k = n_clusters) %>%
as.character())
ufus.long = melt(ufus.scaled, id.vars = c("UORG_LOTACAO", "cluster"))
hc %>%
cutree(k = n_clusters) %>%
silhouette(dists) %>%
plot(col = RColorBrewer::brewer.pal(n_clusters, "Set2"))
ufus.long %>%
ggplot(aes(x = variable, y = value, group = UORG_LOTACAO, colour = cluster)) +
geom_line(alpha = 0.4) +
facet_wrap(~ cluster)
#Remove a coluna cluster
ufus.scaled = ufus.scaled %>%
select(-cluster)
# O agrupamento
km = ufus.scaled %>%
select(-UORG_LOTACAO) %>%
kmeans(centers = n_clusters, 20)
ufus.scaled.km.long = km %>%
augment(ufus.scaled) %>%
gather(key = "variável",
value = "valor",
-UORG_LOTACAO, -.cluster)
ufus.scaled.km.long %>%
ggplot(aes(x = `variável`, y = valor, group = UORG_LOTACAO, colour = .cluster)) +
#geom_point(alpha = 0.2) +
geom_line(alpha = .5) +
facet_wrap(~ .cluster)
autoplot(km, data = ufus.scaled, label = TRUE)
dists = ufus.scaled %>%
select(-UORG_LOTACAO) %>%
dist() # só para plotar silhouetas depois
plot(silhouette(km$cluster, dists), col = RColorBrewer::brewer.pal(n_clusters, "Set2"))
table(km$cluster)
#summary(ufus.scaled)
p <- km %>%
augment(ufus.scaled) %>%
plot_ly(type = 'parcoords',
line = list(color = ~.cluster,
showScale = TRUE),
dimensions = list(
list(range = c(-3, 3),
label = 'Outro/repo', values = ~Outro),
list(range =  c(-3, 3),
label = 'Professor20h', values = ~Professor20),
list(range =  c(-6, 3),
label = 'Professor40h', values = ~Professor40),
list(range =  c(-2, 3),
label = 'idade_mediana', values = ~idade_mediana)
)
)
p
plot_clusgap = function(clusgap, title="Gap Statistic calculation results"){
require("ggplot2")
gstab = data.frame(clusgap$Tab, k=1:nrow(clusgap$Tab))
p = ggplot(gstab, aes(k, gap)) + geom_line() + geom_point(size=5)
p = p + geom_errorbar(aes(ymax=gap+SE.sim, ymin=gap-SE.sim), width = .2)
p = p + ggtitle(title)
return(p)
}
gaps <- ufus.scaled %>%
select(-UORG_LOTACAO) %>%
clusGap(FUN = kmeans, nstart = 20, K.max = 15, B = 200)
plot_clusgap(gaps)
set.seed(123)
explorando_k = tibble(k = 1:12) %>%
group_by(k) %>%
do(
kmeans(select(ufus.scaled, -UORG_LOTACAO),
centers = .$k,
nstart = 20) %>% glance()
)
explorando_k %>%
ggplot(aes(x = k, y = betweenss / totss)) +
geom_line() +
geom_point()
library(gtable)
library(grid)
library(ggplot2)
library(plotly)
p <- ggplot(data = ufus1, aes(x = ufus$Professor20, fill = cluster)) +
geom_bar(position = "dodge")
ggplotly(p)
plot_ly(ufus, x = ufus1$idade_mediana, y = ufus$cluster,
mode = "markers", color = ufus$cluster)
knitr::opts_chunk$set(echo = TRUE)
suppressWarnings(library(tidyverse))
library(tidyverse)
library(lubridate)
library(viridis)
require(GGally, quietly = TRUE)
require(reshape2, quietly = TRUE)
require(tidyverse, quietly = TRUE, warn.conflicts = FALSE)
library(ggfortify)
library(cluster)
library(ggdendro)
library(broom)
theme_set(theme_bw())
library(DT)
ufus = read_csv("ufcg-201704-sumario-UAs-wide.csv",
col_types = cols(
UORG_LOTACAO = col_character(),
Outro = col_double(),
`Professor 20h` = col_double(),
`Professor 40h ou DE` = col_double(),
idade_25perc = col_double(),
idade_mediana = col_double(),
idade_75perc = col_double()
)
)
names(ufus)[3:4] <- c("Professor20","Professor40")
ufus = ufus[c("UORG_LOTACAO","Professor20","Professor40","idade_mediana","Outro")]
summary(ufus)
ufus %>%
select(-UORG_LOTACAO) %>%
ggpairs()
ufus %>%
ggplot(aes(x = "Professor20", y = Professor20)) +
geom_jitter(width = .01, height = 0, size = 2, alpha = .6)
ufus %>%
ggplot(aes(x = Professor20)) +
geom_histogram(bins = 15,
boundary = 0,
fill = "#95CFB7",
color = "black") +
geom_rug()
ufus.scaled = ufus %>%
mutate_each(funs(as.vector(scale(.))), 2:5)
summary(ufus.scaled)
ufus.scaled %>%
select(-UORG_LOTACAO) %>%
ggpairs()
dists = ufus.scaled %>%
as.data.frame() %>%
column_to_rownames("UORG_LOTACAO") %>%
dist(method = "euclidean")
hc = hclust(dists, method = "ward.D2")
plot(hc, cex = .6)
n_clusters = 3
rect.hclust(hc, k=n_clusters)
ufus <- ufus %>%
mutate(cluster = hc %>%
cutree(k = n_clusters) %>%
as.character())
ufus.scaled <- ufus.scaled %>%
mutate(cluster = hc %>%
cutree(k = n_clusters) %>%
as.character())
ufus.long = melt(ufus.scaled, id.vars = c("UORG_LOTACAO", "cluster"))
hc %>%
cutree(k = n_clusters) %>%
silhouette(dists) %>%
plot(col = RColorBrewer::brewer.pal(n_clusters, "Set2"))
ufus.long %>%
ggplot(aes(x = variable, y = value, group = UORG_LOTACAO, colour = cluster)) +
geom_line(alpha = 0.4) +
facet_wrap(~ cluster)
#Remove a coluna cluster
ufus.scaled = ufus.scaled %>%
select(-cluster)
# O agrupamento
km = ufus.scaled %>%
select(-UORG_LOTACAO) %>%
kmeans(centers = n_clusters, 20)
ufus.scaled.km.long = km %>%
augment(ufus.scaled) %>%
gather(key = "variável",
value = "valor",
-UORG_LOTACAO, -.cluster)
ufus.scaled.km.long %>%
ggplot(aes(x = `variável`, y = valor, group = UORG_LOTACAO, colour = .cluster)) +
#geom_point(alpha = 0.2) +
geom_line(alpha = .5) +
facet_wrap(~ .cluster)
autoplot(km, data = ufus.scaled, label = TRUE)
dists = ufus.scaled %>%
select(-UORG_LOTACAO) %>%
dist() # só para plotar silhouetas depois
plot(silhouette(km$cluster, dists), col = RColorBrewer::brewer.pal(n_clusters, "Set2"))
table(km$cluster)
#summary(ufus.scaled)
p <- km %>%
augment(ufus.scaled) %>%
plot_ly(type = 'parcoords',
line = list(color = ~.cluster,
showScale = TRUE),
dimensions = list(
list(range = c(-3, 3),
label = 'Outro/repo', values = ~Outro),
list(range =  c(-3, 3),
label = 'Professor20h', values = ~Professor20),
list(range =  c(-6, 3),
label = 'Professor40h', values = ~Professor40),
list(range =  c(-2, 3),
label = 'idade_mediana', values = ~idade_mediana)
)
)
p
plot_clusgap = function(clusgap, title="Gap Statistic calculation results"){
require("ggplot2")
gstab = data.frame(clusgap$Tab, k=1:nrow(clusgap$Tab))
p = ggplot(gstab, aes(k, gap)) + geom_line() + geom_point(size=5)
p = p + geom_errorbar(aes(ymax=gap+SE.sim, ymin=gap-SE.sim), width = .2)
p = p + ggtitle(title)
return(p)
}
gaps <- ufus.scaled %>%
select(-UORG_LOTACAO) %>%
clusGap(FUN = kmeans, nstart = 20, K.max = 15, B = 200)
plot_clusgap(gaps)
set.seed(123)
explorando_k = tibble(k = 1:12) %>%
group_by(k) %>%
do(
kmeans(select(ufus.scaled, -UORG_LOTACAO),
centers = .$k,
nstart = 20) %>% glance()
)
explorando_k %>%
ggplot(aes(x = k, y = betweenss / totss)) +
geom_line() +
geom_point()
hist(ufus$idade_mediana, col="darkblue", border="black");
ggplot(aes(x='Idade'), data=ufus$idade_mediana) + \
ggplot(aes(x='idade_mediana', color='cluster'), data=ufus) + \
ggplot(aes(x='idade_mediana', color='cluster'), data=ufus) +
geom_histogram()
ggplot(aes(x=idade_mediana, color='cluster'), data=ufus) +
geom_histogram()
ggplot(aes(x=idade_mediana, color=cluster), data=ufus) +
geom_histogram()
ggplot(aes(x=idade_mediana, fill=cluster), data=ufus) +
geom_histogram()
ggplot(aes(y=idade_mediana, fill=cluster), data=ufus) +
geom_histogram()
ggplot(aes(x=idade_mediana, fill=cluster), data=ufus) +
geom_histogram()
ggplot(aes(x=idade_mediana, fill=cluster), data=ufus) +
geom_histogram()
ggplot(aes(x=Professro20, fill=cluster), data=ufus) +
geom_histogram()
ggplot(aes(x=Professor20, fill=cluster), data=ufus) +
geom_histogram()
ggplot(aes(x=Professor20, fill=cluster), data=ufus) +
geom_histogram() + xlab("Qauntidade de Professores que trabalham 20 horas")
ggplot(aes(x=idade_mediana, fill=cluster), data=ufus) +
geom_histogram() + xlab("Log da Idade mediana dos professores")
knitr::opts_chunk$set(echo = TRUE)
suppressWarnings(library(tidyverse))
library(tidyverse)
library(lubridate)
library(viridis)
require(GGally, quietly = TRUE)
require(reshape2, quietly = TRUE)
require(tidyverse, quietly = TRUE, warn.conflicts = FALSE)
library(ggfortify)
library(cluster)
library(ggdendro)
library(broom)
theme_set(theme_bw())
library(DT)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
suppressWarnings(library(tidyverse))
suppressWarnings(library(tidyverse))
install.packages(c("broom", "git2r", "httpuv", "stringi", "tinytex"))
suppressWarnings(library(tidyverse))
library(tidyverse)
library(lubridate)
library(viridis)
require(GGally, quietly = TRUE)
require(reshape2, quietly = TRUE)
require(tidyverse, quietly = TRUE, warn.conflicts = FALSE)
library(ggfortify)
library(cluster)
library(ggdendro)
library(broom)
theme_set(theme_bw())
library(DT)
suppressWarnings(library(tidyverse))
library(tidyverse)
library(lubridate)
library(viridis)
library(DT)
library(tidyverse)
ufus = read_csv("github.csv")
